{
  "hash": "e9e6fb9e475401912e879eb800c4eb8f",
  "result": {
    "markdown": "---\ntitle: \"Données météos\"\n---\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport requests\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom datetime import datetime, timedelta\nimport random\n\n# Remplacez le nom du jeu de données (dataset-name) et les filtres (facet et refine) par les valeurs appropriées\nurl_api = \"https://public.opendatasoft.com/api/records/1.0/search/?dataset=donnees-synop-essentielles-omm&rows=100&facet=nom_reg&refine.nom_reg=Occitanie\"\n\n# Faites la requête API\nresponse = requests.get(url_api)\ndata = response.json()\n\n# Créer un DataFrame à partir des données\ndf = pd.DataFrame([record['fields'] for record in data['records']])\n\n# Ajout d'une colonne temporelle pour la démonstration (à remplacer par votre propre colonne)\ndf['datetime'] = [datetime.now() - timedelta(days=random.randint(1, 365)) for _ in range(len(df))]\n\n# Convertir la colonne 'datetime' en format datetime\ndf['datetime'] = pd.to_datetime(df['datetime'])\n\n# Vérifier la structure des données\nprint(df.head())\n\n# Représentation graphique\nif 'temps_present' in df.columns:\n    plt.figure(figsize=(12, 6))\n    plt.plot(df['datetime'], df['temps_present'], marker='o', linestyle='-')\n    plt.title('Représentation Temporelle du Dataset')\n    plt.xlabel('Date et Heure')\n    plt.ylabel('Temps Présent')\n    plt.xticks(rotation=45)\n    plt.tight_layout()\n    plt.show()\nelse:\n    print(\"La colonne 'temps_present' n'est pas présente dans le DataFrame.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   tminsolc  rafper code_dep            libgeo    pmer  code_epci       t ww  \\\n0       8.5     4.8       66         Perpignan  102150  200027183  290.95  0   \n1       NaN     7.7       12            Millau  101890  241200567  289.75  0   \n2       8.5     5.1       65             Louey  101720  200069300  295.05  0   \n3       6.9     7.8       31           Blagnac  101840  243100518  293.75  0   \n4       3.7     8.2       09  Lorp-Sentaraille  102240  200067940  295.85  0   \n\n   ht_neige numer_sta  ...  nnuage1 hbas hnuage2  hnuage1 nnuage2 nnuage3  \\\n0       0.0     07747  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n1       0.0     07558  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n2       0.0     07621  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n3       0.0     07630  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n4       0.0     07627  ...      NaN  NaN     NaN      NaN     NaN     NaN   \n\n   ctype4  hnuage3  ctype3                   datetime  \n0     NaN      NaN     NaN 2023-05-17 16:20:37.138018  \n1     NaN      NaN     NaN 2023-01-02 16:20:37.138018  \n2     NaN      NaN     NaN 2023-05-01 16:20:37.138018  \n3     NaN      NaN     NaN 2022-11-28 16:20:37.138018  \n4     NaN      NaN     NaN 2022-12-31 16:20:37.138018  \n\n[5 rows x 59 columns]\n```\n:::\n\n::: {.cell-output .cell-output-display}\n![](about2_files/figure-html/cell-2-output-2.png){width=1141 height=565}\n:::\n:::\n\n\n",
    "supporting": [
      "about2_files"
    ],
    "filters": [],
    "includes": {}
  }
}